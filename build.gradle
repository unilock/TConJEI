plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}+fabric"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url = "https://maven.parchmentmc.org/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release/" }
    maven { url = "https://maven.ladysnake.org/releases/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://maven.wispforest.io/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
}

loom {
    mods {
        "tconjei" {
            sourceSet("main")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_mappings}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("slimeknights.tconstruct:Hephaestus:${project.minecraft_version}-${project.hephaestus_version}") {
        exclude group: 'dev.architectury'
        exclude group: 'me.shedaniel'
        exclude group: 'mezz.jei'
    }
    modImplementation("slimeknights.mantle:Mantle:${project.minecraft_version}-${project.mantle_version}") {
        exclude group: 'dev.architectury'
        exclude group: 'me.shedaniel'
        exclude group: 'mezz.jei'
    }

    modCompileOnly "mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}"
    modCompileOnly "mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}"

	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

	switch (project.recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "emi": modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"; break
		case "jei": modLocalRuntime "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"; break
		default: System.err.println("Invalid recipe_viewer selected!"); break
	}

    modCompileOnly "io.github.fabricators_of_create.Porting-Lib:fluids:${project.portinglib_version}+${project.minecraft_version}"
	modCompileOnly "io.github.fabricators_of_create.Porting-Lib:items:${project.portinglib_version}+${project.minecraft_version}"
	modCompileOnly "io.github.fabricators_of_create.Porting-Lib:tool_actions:${project.portinglib_version}+${project.minecraft_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
